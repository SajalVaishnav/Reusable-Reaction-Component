18_01_24 11:18

- user flow
    - login with just username
    - there's only one post that the user can react to (can users create new posts? maybe not for now)
    - react to the post: 
        - change previous Reactions
        - undo reaction i.e. go to no reaction
        - view latest reactions 
        - view reactions count

- Data
    - User Data 
        - username (PK)
        - (extensible to passwords)
    - Posts
        - post id (PK)
        - uid (FK)
        - Header
        - Content
        - reactions count
        - recent reactions (not sure how to implement this, but probably a queue like data structure... should have default implementations)
    - Reactions
        - reaction_id
        - post_id (index on this column for faster search) (FK)
        - username (FK)
        - reaction_emoji_id (FK)
    - Reaction_emojis (so that we can change the type of reactions available in the future with ease)
        - reaction_type_id (PK)
        - reaction_type_details (maybe unicode of the emoji)

- When the page loads
    - pull in relevant posts for user
        - not a relevant problem since only one post
    - async for every post
        - pull in post details
        - pull in current user's reaction status

- When the user modifies reaction
    - simple async post request 


20_01_24 

- Past progress:
    - init next app
    - init prisma and define schema

- Schema changes
    - autoincrement vs cuid
    - maybe it makes sense for posts and users and reactions to have autoincrement
    - would imporve readability and no distributed env so collisisons are not an issue

- Connect to supabase
    - created an account
    - configured the env file to connect to postgres db
    - going to seed some data and then test

- Storing emojis 
    - they're unicode characters
    - it makes sense for it to have its own table for personalization, adding new reactions etc.
    - hypothesis: if I just write them as unicode strings like (U&'\+01F913') it should work
    - https://towardsdatascience.com/emojis-in-your-data-9a5513ead2dd

21_01_24
- db_utils
    - get posts
    - get reactions for a post
    - create user

22_01_24
- db_utils  
    - made it more efficient
        - load only count of reactions with a post
        - separate function to load reactions
            - needed createdAt in the schema
    - added explicit return types

- okay now ui 
    - pages
        - just the root
    - components
        - reactions modal
            - title-ribbon
            - list of user-reaction
        - post
            - bottom-ribbon
            - title-ribbon
            - content 

25_01_24

- code hygiene
    - uId -> userId
    - db_utils
        - server actions
        - break down to osts, comments, etc.
    - prismaclient instances
        - use singleton
    - naming
        - popoever button
        - why "componennt" in ReactionComponent
    - use of useEffect in ReactionComponent
    - how to set state for a toggling boolean
- cache reactions count inside the opst table
- practice CSS
